{"version":3,"file":"static/js/739.d752f1de.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TweetIstem/TweetIstem.module.css?f292","services/tweets-api.js","components/TweetIstem/TweetIstem.jsx","webpack://react-homework-template/./src/components/TweetsList/TweetsList.module.css?2ae8","components/TweetsList/TweetsList.jsx","variables.js","webpack://react-homework-template/./src/components/DropDownForm/DropDownForm.module.css?634e","components/DropDownForm/DropDownForm.jsx","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/GoBackLink/GoBackLink.module.css?ade3","components/GoBackLink/GoBackLink.jsx","pages/Tweets.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"TweetIstem_button__rGPdu\",\"buttonFollow\":\"TweetIstem_buttonFollow__yv1t8 TweetIstem_button__rGPdu\",\"buttonFollowing\":\"TweetIstem_buttonFollowing__8+ml9 TweetIstem_button__rGPdu\",\"tweetCard\":\"TweetIstem_tweetCard__1A4q5\",\"tweetImage\":\"TweetIstem_tweetImage__bl71H\",\"tweets\":\"TweetIstem_tweets__PxogA\",\"followers\":\"TweetIstem_followers__juRpH\"};","const BASE_URL = 'https://64674d33ba7110b663b4ab93.mockapi.io/tweets';\nconst PER_PAGE = 3;\n\nconst fetchTweets = page => {\n  return fetch(`${BASE_URL}?page=${page}&limit=${PER_PAGE}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst folowTweets = (id, followersCount, isFollowTweet) => {\n  return fetch(`https://64674d33ba7110b663b4ab93.mockapi.io/tweets/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      followers: followersCount,\n      isFollow: isFollowTweet,\n    }),\n  });\n};\nconst api = {\n  fetchTweets,\n  folowTweets,\n};\nexport default api;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport css from './TweetIstem.module.css';\nimport tweetsApi from '../../services/tweets-api';\n\nconst TweetsItem = ({ user, tweets, followers, avatar, id, isFollow }) => {\n  const [isFollowTweet, setIsFollowTweet] = useState(isFollow);\n  const [followersCount, setFollowersCount] = useState(followers);\n\n  useEffect(() => {\n    tweetsApi.folowTweets(id, followersCount, isFollowTweet);\n  }, [id, isFollowTweet, followersCount]);\n\n  const handleOnClick = () => {\n    setIsFollowTweet(!isFollowTweet);\n\n    if (isFollowTweet) {\n      setFollowersCount(followersCount - 1);\n      return;\n    }\n    setFollowersCount(followersCount + 1);\n  };\n\n  return (\n    <li className={css.tweetCard}>\n      <article>\n        <img className={css.tweetImage} src={avatar} alt={user} width=\"62\" />\n        <p className={css.tweets}>{tweets} tweets</p>\n        <p className={css.followers}>{followersCount} followers</p>\n        <button\n          className={clsx(css.buttonFollow, [\n            isFollowTweet && css.buttonFollowing,\n          ])}\n          type=\"button\"\n          onClick={handleOnClick}\n        >\n          {isFollowTweet ? 'following' : 'follow'}\n        </button>\n      </article>\n    </li>\n  );\n};\n\nTweetsItem.propTypes = {\n  user: PropTypes.string,\n  tweets: PropTypes.number,\n  followers: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  isFollow: PropTypes.bool.isRequired,\n};\n\nexport default TweetsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TweetsList_container__y9I8O\",\"tweetList\":\"TweetsList_tweetList__xKByH\"};","import PropTypes from 'prop-types';\nimport TweetsItem from 'components/TweetIstem/TweetIstem';\nimport css from './TweetsList.module.css';\n\nconst TweetsList = ({ tweets }) => {\n  return (\n    <div className={css.container}>\n      <ul className={css.tweetList}>\n        {tweets.map(tweet => (\n          <TweetsItem key={tweet.id} {...tweet} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nTweetsList.propTypes = {\n  tweet: PropTypes.array,\n};\n\nexport default TweetsList;\n","export const options = {\n  all: '',\n  follow: false,\n  followings: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"selectForm\":\"DropDownForm_selectForm__JEsAP\",\"select\":\"DropDownForm_select__CxLBH\"};","import PropTypes from 'prop-types';\nimport { options } from '../../variables';\nimport css from './DropDownForm.module.css';\n\nconst DropDownForm = ({ selected, onChange }) => {\n  return (\n    <form className={css.selectForm}>\n      <select className={css.select} value={selected} onChange={onChange}>\n        {Object.keys(options).map(value => (\n          <option className={css.option} value={options[value]} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </form>\n  );\n};\n\nDropDownForm.propTypes = {\n  selected: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default DropDownForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"loadMoreBtn\":\"Button_loadMoreBtn__bhrx+\",\"container\":\"Button_container__31fZ8\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nconst Button = ({ handleClick }) => {\n  return (\n    <div className={css.container}>\n      <button className={css.loadMoreBtn} type=\"button\" onClick={handleClick}>\n        Load More\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"goBackLink\":\"GoBackLink_goBackLink__9ip7Z\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './GoBackLink.module.css';\n\nconst GoBackLink = ({ location }) => {\n  return (\n    <Link className={css.goBackLink} to={location}>\n      Go back\n    </Link>\n  );\n};\n\nGoBackLink.propTypes = {\n  location: PropTypes.string.isRequired,\n};\n\nexport default GoBackLink;\n","import TweetsList from 'components/TweetsList/TweetsList';\nimport { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport tweetsApi from '../services/tweets-api';\nimport routes from 'routes';\nimport { options } from '../variables';\nimport DropDownForm from '../components/DropDownForm/DropDownForm';\nimport Button from 'components/Button/Button';\nimport GoBackLink from 'components/GoBackLink/GoBackLink';\n\nconst Tweets = () => {\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selected, setSelected] = useState(options.all);\n  const [isShowButton, setIsShowButton] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location?.state?.from ?? routes.HOME);\n\n  useEffect(() => {\n    tweetsApi\n      .fetchTweets(currentPage)\n      .then(data => {\n        if (data.length === 0) {\n          return Promise.reject(new Error(`Sorry, we have no tweets.`));\n        }\n        setIsShowButton(true);\n        setTweets(prevState => [...prevState, ...data]);\n\n        if (currentPage > 1 && data.length < 3) {\n          Notiflix.Notify.info('We have no tweets more!');\n          setIsShowButton(false);\n          return;\n        }\n      })\n      .catch(error => setError(error.message));\n  }, [currentPage]);\n\n  const handleSelect = e => {\n    return setSelected(e.target.value);\n  };\n\n  const incrementPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const visibleTweets =\n    selected === ''\n      ? tweets\n      : tweets.filter(tweet => {\n          return tweet.isFollow.toString() === selected;\n        });\n\n  return (\n    <>\n      <GoBackLink location={backLinkLocationRef.current} />\n      <DropDownForm select={selected} onChange={handleSelect} />\n      {visibleTweets.length > 0 && <TweetsList tweets={visibleTweets} />}\n      {error && <div>{error.message}</div>}\n      {isShowButton && <Button handleClick={incrementPage} />}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["fetchTweets","page","fetch","then","response","ok","json","folowTweets","id","followersCount","isFollowTweet","method","headers","body","JSON","stringify","followers","isFollow","user","tweets","avatar","useState","setIsFollowTweet","setFollowersCount","useEffect","tweetsApi","className","css","src","alt","width","clsx","type","onClick","map","tweet","options","all","follow","followings","selected","onChange","value","Object","keys","handleClick","location","to","setTweets","error","setError","currentPage","setCurrentPage","setSelected","isShowButton","setIsShowButton","useLocation","backLinkLocationRef","useRef","state","from","routes","data","length","Promise","reject","Error","prevState","Notiflix","catch","message","visibleTweets","filter","toString","current","select","e","target"],"sourceRoot":""}